{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a SudoHeroes Tu destino definitivo para dominar el mundo de la administraci\u00f3n de sistemas y la ciberseguridad. Aprende, comparte y colabora con otros entusiastas de la tecnolog\u00eda. \u00bfQu\u00e9 ofrecemos? Tutoriales Pr\u00e1cticos : Gu\u00edas claras y detalladas sobre administraci\u00f3n de sistemas, redes y herramientas esenciales. Comunidad Activa : Comparte experiencias y soluciona problemas con otros administradores y desarrolladores. Noticias y Tendencias : Mant\u00e9n el ritmo con las \u00faltimas novedades del mundo IT. \u00bfPor qu\u00e9 SudoHeroes? Porque creemos que el conocimiento debe ser accesible y f\u00e1cil de aplicar . Nuestra plataforma est\u00e1 dise\u00f1ada para ayudarte a: Resolver problemas r\u00e1pidamente. Mejorar tus habilidades como administrador de sistemas. Explorar herramientas nuevas e innovadoras. \u00a1Empieza ahora! Explora nuestros tutoriales \u00danete a la comunidad Contacta con nosotros \"Con grandes permisos, vienen grandes responsabilidades.\" - La filosof\u00eda de todo H\u00e9roe del Shell \u00a1Gracias por ser parte de SudoHeroes!","title":"Inicio"},{"location":"#que-ofrecemos","text":"Tutoriales Pr\u00e1cticos : Gu\u00edas claras y detalladas sobre administraci\u00f3n de sistemas, redes y herramientas esenciales. Comunidad Activa : Comparte experiencias y soluciona problemas con otros administradores y desarrolladores. Noticias y Tendencias : Mant\u00e9n el ritmo con las \u00faltimas novedades del mundo IT.","title":"\u00bfQu\u00e9 ofrecemos?"},{"location":"#por-que-sudoheroes","text":"Porque creemos que el conocimiento debe ser accesible y f\u00e1cil de aplicar . Nuestra plataforma est\u00e1 dise\u00f1ada para ayudarte a: Resolver problemas r\u00e1pidamente. Mejorar tus habilidades como administrador de sistemas. Explorar herramientas nuevas e innovadoras.","title":"\u00bfPor qu\u00e9 SudoHeroes?"},{"location":"#empieza-ahora","text":"Explora nuestros tutoriales \u00danete a la comunidad Contacta con nosotros \"Con grandes permisos, vienen grandes responsabilidades.\" - La filosof\u00eda de todo H\u00e9roe del Shell","title":"\u00a1Empieza ahora!"},{"location":"#gracias-por-ser-parte-de-sudoheroes","text":"","title":"\u00a1Gracias por ser parte de SudoHeroes!"},{"location":"appweb/","text":"","title":"Apps Web"},{"location":"dns/","text":"Asignaci\u00f3n de IPs el\u00e1sticas y configuraci\u00f3n de DNS en IONOS Lo primero que haremos ser\u00e1 asignar direcciones IP el\u00e1sticas a nuestras instancias en AWS. Accedemos a la consola de AWS y seleccionamos la opci\u00f3n de direcciones IP el\u00e1sticas. Luego, asignamos una direcci\u00f3n IP a cada una de nuestras instancias. Una vez asignadas las IPs, nos conectamos a cada una de ellas por SSH y realizamos pruebas de conectividad mediante ping. A continuaci\u00f3n, configuramos las entradas DNS en nuestro dominio gestionado en IONOS. A\u00f1adimos dos registros tipo A, asignando cada IP el\u00e1stica a un subdominio correspondiente. Finalmente, verificamos que las entradas han sido creadas correctamente. Implementaci\u00f3n de un servidor DNS con BIND En esta documentaci\u00f3n se detallar\u00e1 el proceso de instalaci\u00f3n y configuraci\u00f3n de un servidor DNS primario en Fedora y un servidor secundario en Ubuntu, utilizando BIND. Para comenzar, instalamos el paquete BIND en la instancia Fedora con el siguiente comando: dnf install bind Editamos el archivo de configuraci\u00f3n principal de BIND en /etc/named.conf para definir las opciones b\u00e1sicas del servicio. Definimos la zona del dominio sudohero.es , especificando que se trata de una zona maestra. Configuramos el archivo de zona en /var/named/named.sudohero.es , definiendo los registros DNS. Aseguramos los permisos correctos para el archivo de zona y reiniciamos el servicio BIND. Realizamos una consulta con nslookup para comprobar la resoluci\u00f3n de nombres. chmod 640 /var/named/named.sudohero.es systemctl restart named A\u00f1adimos al fichero de zona el registro de la zona secundaria que crearemos a continuaci\u00f3n en la instancia Ubuntu. En la instancia Ubuntu, instalamos BIND9 con: apt install bind9 Definimos la zona esclava en el archivo /etc/bind/named.conf.local . Verificamos la transferencia de zona en los logs del sistema. Comprobamos en la instancia Ubuntu que la zona se ha transferido correctamente. Verificamos la configuraci\u00f3n de los servidores DNS con consultas nslookup . Finalmente, configuramos en IONOS el dominio para que utilice nuestros servidores DNS propios. Comprobamos que el servidor DNS funciona correctamente y se ha expandido por la red, asegurando que la resoluci\u00f3n de nombres est\u00e1 operativa y accesible globalmente, permitiendo que cualquier cliente en internet pueda resolver los dominios configurados. Con esto, hemos finalizado la implementaci\u00f3n del servidor DNS con BIND.","title":"DNS"},{"location":"dns/#asignacion-de-ips-elasticas-y-configuracion-de-dns-en-ionos","text":"Lo primero que haremos ser\u00e1 asignar direcciones IP el\u00e1sticas a nuestras instancias en AWS. Accedemos a la consola de AWS y seleccionamos la opci\u00f3n de direcciones IP el\u00e1sticas. Luego, asignamos una direcci\u00f3n IP a cada una de nuestras instancias. Una vez asignadas las IPs, nos conectamos a cada una de ellas por SSH y realizamos pruebas de conectividad mediante ping. A continuaci\u00f3n, configuramos las entradas DNS en nuestro dominio gestionado en IONOS. A\u00f1adimos dos registros tipo A, asignando cada IP el\u00e1stica a un subdominio correspondiente. Finalmente, verificamos que las entradas han sido creadas correctamente.","title":"Asignaci\u00f3n de IPs el\u00e1sticas y configuraci\u00f3n de DNS en IONOS"},{"location":"dns/#implementacion-de-un-servidor-dns-con-bind","text":"En esta documentaci\u00f3n se detallar\u00e1 el proceso de instalaci\u00f3n y configuraci\u00f3n de un servidor DNS primario en Fedora y un servidor secundario en Ubuntu, utilizando BIND. Para comenzar, instalamos el paquete BIND en la instancia Fedora con el siguiente comando: dnf install bind Editamos el archivo de configuraci\u00f3n principal de BIND en /etc/named.conf para definir las opciones b\u00e1sicas del servicio. Definimos la zona del dominio sudohero.es , especificando que se trata de una zona maestra. Configuramos el archivo de zona en /var/named/named.sudohero.es , definiendo los registros DNS. Aseguramos los permisos correctos para el archivo de zona y reiniciamos el servicio BIND. Realizamos una consulta con nslookup para comprobar la resoluci\u00f3n de nombres. chmod 640 /var/named/named.sudohero.es systemctl restart named A\u00f1adimos al fichero de zona el registro de la zona secundaria que crearemos a continuaci\u00f3n en la instancia Ubuntu. En la instancia Ubuntu, instalamos BIND9 con: apt install bind9 Definimos la zona esclava en el archivo /etc/bind/named.conf.local . Verificamos la transferencia de zona en los logs del sistema. Comprobamos en la instancia Ubuntu que la zona se ha transferido correctamente. Verificamos la configuraci\u00f3n de los servidores DNS con consultas nslookup . Finalmente, configuramos en IONOS el dominio para que utilice nuestros servidores DNS propios. Comprobamos que el servidor DNS funciona correctamente y se ha expandido por la red, asegurando que la resoluci\u00f3n de nombres est\u00e1 operativa y accesible globalmente, permitiendo que cualquier cliente en internet pueda resolver los dominios configurados. Con esto, hemos finalizado la implementaci\u00f3n del servidor DNS con BIND.","title":"Implementaci\u00f3n de un servidor DNS con BIND"},{"location":"doc/","text":"Instalaci\u00f3n de MkDocs y despliegue en GitHub Pages En esta documentaci\u00f3n se describe el proceso de instalaci\u00f3n de MkDocs en una instancia Ubuntu y su configuraci\u00f3n para desplegar una documentaci\u00f3n en GitHub Pages. Para comenzar, instalamos MkDocs con el siguiente comando: sudo apt install mkdocs Creamos un nuevo proyecto con MkDocs y verificamos su estructura de archivos: mkdocs new sudoheroes cd sudoheroes ls -l Instalamos el tema cinder para personalizar la apariencia de la documentaci\u00f3n: sudo pip install mkdocs-cinder --break-system-packages Modificamos el archivo de configuraci\u00f3n mkdocs.yml para definir la estructura del sitio y el tema: Verificamos que la estructura de archivos sea la correcta antes de proceder al despliegue: Realizamos un primer commit y preparamos la configuraci\u00f3n para subir la documentaci\u00f3n a GitHub: git add . git commit -m \"Peque\u00f1as modificaciones\" git push origin main Finalmente, desplegamos la documentaci\u00f3n en GitHub Pages con el siguiente comando: mkdocs gh-deploy Confirmamos que la documentaci\u00f3n ya est\u00e1 accesible en la URL generada por GitHub Pages: Con esto, hemos finalizado la instalaci\u00f3n y configuraci\u00f3n de MkDocs en Ubuntu con despliegue en GitHub Pages.","title":"Doc"},{"location":"doc/#instalacion-de-mkdocs-y-despliegue-en-github-pages","text":"En esta documentaci\u00f3n se describe el proceso de instalaci\u00f3n de MkDocs en una instancia Ubuntu y su configuraci\u00f3n para desplegar una documentaci\u00f3n en GitHub Pages. Para comenzar, instalamos MkDocs con el siguiente comando: sudo apt install mkdocs Creamos un nuevo proyecto con MkDocs y verificamos su estructura de archivos: mkdocs new sudoheroes cd sudoheroes ls -l Instalamos el tema cinder para personalizar la apariencia de la documentaci\u00f3n: sudo pip install mkdocs-cinder --break-system-packages Modificamos el archivo de configuraci\u00f3n mkdocs.yml para definir la estructura del sitio y el tema: Verificamos que la estructura de archivos sea la correcta antes de proceder al despliegue: Realizamos un primer commit y preparamos la configuraci\u00f3n para subir la documentaci\u00f3n a GitHub: git add . git commit -m \"Peque\u00f1as modificaciones\" git push origin main Finalmente, desplegamos la documentaci\u00f3n en GitHub Pages con el siguiente comando: mkdocs gh-deploy Confirmamos que la documentaci\u00f3n ya est\u00e1 accesible en la URL generada por GitHub Pages: Con esto, hemos finalizado la instalaci\u00f3n y configuraci\u00f3n de MkDocs en Ubuntu con despliegue en GitHub Pages.","title":"Instalaci\u00f3n de MkDocs y despliegue en GitHub Pages"},{"location":"http/","text":"Creaci\u00f3n de virtual hosts inform\u00e1tica y formaci\u00f3n Lo primero que debemos hacer es crear el primer fichero de nuestra web. Creamos el directorio /var/www/informatica y alli el index.html. Le damos contenido. Como vamos a tener dos virtual host creamos tambi\u00e9n el directorio /var/www/formacion y su propio index.html. Le damos contenido. Ahora que ya tenemos algo que mostrar, en el directorio donde almacenamos los ficheros de configuraci\u00f3n de Nginx, creamos el fichero de configuraci\u00f3n tanto de inform\u00e1tica como de formaci\u00f3n. Como vamos a cambiar la ruta de los logs de errores y acceso necesitamos crearlos. Necesitamos que ambos ficheros tengan una configuraci\u00f3n adecuada con las necesidades que tenemos para nuestros virtual hosts. Es importante definir en que puerto escucha, el nombre que sirve, el fichero que va a mostrar y la localizaci\u00f3n de los ficheros de configuraci\u00f3n. Para el departamento de formaci\u00f3n el fichero de configuraci\u00f3n contendr\u00e1 lo siguiente: Una vez hechas estas configuraciones necesitamos habilitar el virtual host. Para ello usamos el comando sudo a2ensite informatica.conf y el comando sudo a2ensite formacion.conf. Si nos movemos al directorio sites-enabled veremos que se han creado los enlaces simb\u00f3licos que habilitan los virtual hosts.","title":"HTTP"},{"location":"http/#creacion-de-virtual-hosts-informatica-y-formacion","text":"Lo primero que debemos hacer es crear el primer fichero de nuestra web. Creamos el directorio /var/www/informatica y alli el index.html. Le damos contenido. Como vamos a tener dos virtual host creamos tambi\u00e9n el directorio /var/www/formacion y su propio index.html. Le damos contenido. Ahora que ya tenemos algo que mostrar, en el directorio donde almacenamos los ficheros de configuraci\u00f3n de Nginx, creamos el fichero de configuraci\u00f3n tanto de inform\u00e1tica como de formaci\u00f3n. Como vamos a cambiar la ruta de los logs de errores y acceso necesitamos crearlos. Necesitamos que ambos ficheros tengan una configuraci\u00f3n adecuada con las necesidades que tenemos para nuestros virtual hosts. Es importante definir en que puerto escucha, el nombre que sirve, el fichero que va a mostrar y la localizaci\u00f3n de los ficheros de configuraci\u00f3n. Para el departamento de formaci\u00f3n el fichero de configuraci\u00f3n contendr\u00e1 lo siguiente: Una vez hechas estas configuraciones necesitamos habilitar el virtual host. Para ello usamos el comando sudo a2ensite informatica.conf y el comando sudo a2ensite formacion.conf. Si nos movemos al directorio sites-enabled veremos que se han creado los enlaces simb\u00f3licos que habilitan los virtual hosts.","title":"Creaci\u00f3n de virtual hosts inform\u00e1tica y formaci\u00f3n"},{"location":"mail/","text":"","title":"Mail"},{"location":"osyred/","text":"Sistemas Operativos y Configuraci\u00f3n de Red Diagrama de Red A continuaci\u00f3n, se presenta el diagrama de la infraestructura de red dise\u00f1ada: Infraestructura en AWS Nuestra infraestructura est\u00e1 alojada en la nube de AWS dentro de una VPC, la cual est\u00e1 dividida en dos subredes: Subred P\u00fablica (10.0.0.0/24) : Contiene los servidores accesibles desde internet. Subred Privada (10.0.1.0/24) : Contiene servidores internos sin acceso directo a internet. AWS proporciona los servicios necesarios para la gesti\u00f3n del tr\u00e1fico entre subredes y hacia el exterior, por lo que no es necesario contar con una m\u00e1quina dedicada como router. En su lugar, se utilizan las herramientas nativas de AWS, como las tablas de rutas y las gateways de internet y NAT. Adem\u00e1s, AWS proporciona un acceso seguro a las m\u00e1quinas mediante SSH, RDP y SFTP, utilizando claves para garantizar la autenticaci\u00f3n y la integridad de las conexiones remotas. Servidores y Funcionalidad Subred P\u00fablica Servidor DNS Primario (Fedora) : Encargado exclusivamente del servicio de resoluci\u00f3n de nombres mediante BIND. IP privada: 10.0.0.138 Servidor Web, Correo y DNS Secundario (Ubuntu 24.04) : Funciona como respaldo del servidor DNS primario. Aloja un servidor web Nginx con la web principal y la web del departamento de ventas. Implementa un servidor de correo basado en Postfix y Dovecot. Ejecuta MkDocs para la gesti\u00f3n y publicaci\u00f3n de documentaci\u00f3n en GitHub Pages. IP privada: 10.0.0.89 Cliente Windows Server 2025 : Se utiliza para visualizar y probar todas las aplicaciones que requieren una interfaz gr\u00e1fica. Est\u00e1 alojado en la subred p\u00fablica. Subred Privada Servidor de Aplicaciones y Formaci\u00f3n (Fedora) : Ejecuta un servidor web Apache con VirtualHosts para los departamentos de inform\u00e1tica y formaci\u00f3n. En el departamento de inform\u00e1tica aloja un sitio WordPress. En el departamento de formaci\u00f3n gestiona Moodle como plataforma educativa. Implementa un servicio de webmail Roundcube, el cual se conecta con el servidor de correo alojado en la subred p\u00fablica. IP privada: 10.0.1.229 Configuraci\u00f3n de Red Para garantizar la comunicaci\u00f3n entre las m\u00e1quinas, se han establecido las siguientes configuraciones: Internet Gateway y NAT Gateway : Permiten el acceso a internet de las instancias en la subred p\u00fablica y facilitan la conectividad de la subred privada a internet sin exponerla directamente. Tablas de Rutas : Se han definido rutas para la comunicaci\u00f3n entre las subredes y la conexi\u00f3n externa. Configuraci\u00f3n de DNS : Se ha implementado un sistema de resoluci\u00f3n de nombres interno para gestionar los dominios de la infraestructura. Esta configuraci\u00f3n servir\u00e1 como base para la correcta implementaci\u00f3n de los servicios de red en fases posteriores del proyecto. Creaci\u00f3n de la VPC y Subredes en AWS En esta documentaci\u00f3n se detallar\u00e1 paso a paso el proceso de creaci\u00f3n de la VPC y la configuraci\u00f3n de las subredes en AWS. 1. Creaci\u00f3n de la VPC Accedemos a la consola de AWS y nos dirigimos al servicio VPC . Hacemos clic en Crear VPC y completamos los siguientes datos: Guardamos la configuraci\u00f3n y verificamos que la VPC ha sido creada correctamente. 2. Creaci\u00f3n de Subredes Subred P\u00fablica Dentro del servicio de VPC, vamos a Subredes y hacemos clic en Crear subred . Completamos los siguientes campos: Guardamos la configuraci\u00f3n. Subred Privada Repetimos el proceso anterior, pero con los siguientes datos: Guardamos la configuraci\u00f3n y verificamos su creaci\u00f3n. 3. Configuraci\u00f3n del Internet Gateway Vamos a Gateways de Internet dentro de VPC y hacemos clic en Crear Gateway de Internet . Le damos el nombre SudoHeroes-IGW y confirmamos la creaci\u00f3n. Asociamos el Internet Gateway a la VPC vpc-sudoheroes . 4. Configuraci\u00f3n de las Tablas de Rutas Tabla de rutas de la subred p\u00fablica En Tablas de Rutas , seleccionamos la tabla de rutas creada autom\u00e1ticamente para la VPC. Agregamos una nueva regla: Guardamos la configuraci\u00f3n. Tabla de rutas de la subred privada Creamos una nueva NAT Gateway en la subred p\u00fablica con una IP el\u00e1stica asignada. Creamos una nueva tabla de rutas y la asociamos a la subred privada. Agregamos una nueva regla: Guardamos la configuraci\u00f3n. Esta documentaci\u00f3n describe detalladamente el proceso de creaci\u00f3n y configuraci\u00f3n de la VPC y sus subredes en AWS. Creaci\u00f3n de Instancias en las Subredes de AWS En esta documentaci\u00f3n se describe paso a paso el proceso de creaci\u00f3n y configuraci\u00f3n de las instancias dentro de las subredes p\u00fablica y privada de la VPC en AWS. 1. Creaci\u00f3n de la Instancia Fedora (Servidor DNS Primario) en la Subred P\u00fablica Accedemos a la consola de AWS y vamos al servicio EC2 . Hacemos clic en Lanzar Instancia y configuramos lo siguiente: Generamos o usamos un par de claves para acceder a la instancia. Le asignamos una IP el\u00e1stica. Comprobamos su conectividad. 2. Creaci\u00f3n de la Instancia Ubuntu (Servidor Web y Correo) en la Subred P\u00fablica Repetimos el proceso anterior con las siguientes configuraciones: Le asignamos una direcci\u00f3n IP el\u00e1stica. Comprobamos su conectividad. 3. Creaci\u00f3n de la Instancia Fedora (Servidor de Aplicaciones y Formaci\u00f3n) en la Subred Privada Lanzamos una nueva instancia con las siguientes configuraciones: Para permitir la conexi\u00f3n SSH desde la subred p\u00fablica, configuramos una conexi\u00f3n a trav\u00e9s de una m\u00e1quina puente. Ahora nos podremos conectar a Fedora (interna) mediante SSH con Ubuntu y Fedora (externa), as\u00ed como podemos acceder a sus servicios gr\u00e1ficos con la m\u00e1quina Windows que vamos a crear a continuaci\u00f3n. 4. Creaci\u00f3n de la Instancia Windows Server 2025 (Cliente) en la Subred P\u00fablica Creamos una nueva instancia con la siguiente configuraci\u00f3n: Nombre: Cliente-Windows Sistema Operativo: Windows Server 2025 Subred: Subred-Publica Habilitar IP p\u00fablica: S\u00ed Grupo de seguridad: Permitimos RDP (3389). Configuramos credenciales de acceso y verificamos conectividad. 4. Grupos de seguridad Configuraremos los grupos de seguridad acorde con los servicios de los que precisaremos durante el reto. Subred P\u00fablica Subred Privada Esta configuraci\u00f3n garantiza que cada instancia est\u00e9 correctamente desplegada y conectada dentro de la infraestructura de AWS.","title":"SOs y Red"},{"location":"osyred/#sistemas-operativos-y-configuracion-de-red","text":"","title":"Sistemas Operativos y Configuraci\u00f3n de Red"},{"location":"osyred/#diagrama-de-red","text":"A continuaci\u00f3n, se presenta el diagrama de la infraestructura de red dise\u00f1ada:","title":"Diagrama de Red"},{"location":"osyred/#infraestructura-en-aws","text":"Nuestra infraestructura est\u00e1 alojada en la nube de AWS dentro de una VPC, la cual est\u00e1 dividida en dos subredes: Subred P\u00fablica (10.0.0.0/24) : Contiene los servidores accesibles desde internet. Subred Privada (10.0.1.0/24) : Contiene servidores internos sin acceso directo a internet. AWS proporciona los servicios necesarios para la gesti\u00f3n del tr\u00e1fico entre subredes y hacia el exterior, por lo que no es necesario contar con una m\u00e1quina dedicada como router. En su lugar, se utilizan las herramientas nativas de AWS, como las tablas de rutas y las gateways de internet y NAT. Adem\u00e1s, AWS proporciona un acceso seguro a las m\u00e1quinas mediante SSH, RDP y SFTP, utilizando claves para garantizar la autenticaci\u00f3n y la integridad de las conexiones remotas.","title":"Infraestructura en AWS"},{"location":"osyred/#servidores-y-funcionalidad","text":"","title":"Servidores y Funcionalidad"},{"location":"osyred/#subred-publica","text":"Servidor DNS Primario (Fedora) : Encargado exclusivamente del servicio de resoluci\u00f3n de nombres mediante BIND. IP privada: 10.0.0.138 Servidor Web, Correo y DNS Secundario (Ubuntu 24.04) : Funciona como respaldo del servidor DNS primario. Aloja un servidor web Nginx con la web principal y la web del departamento de ventas. Implementa un servidor de correo basado en Postfix y Dovecot. Ejecuta MkDocs para la gesti\u00f3n y publicaci\u00f3n de documentaci\u00f3n en GitHub Pages. IP privada: 10.0.0.89 Cliente Windows Server 2025 : Se utiliza para visualizar y probar todas las aplicaciones que requieren una interfaz gr\u00e1fica. Est\u00e1 alojado en la subred p\u00fablica.","title":"Subred P\u00fablica"},{"location":"osyred/#subred-privada","text":"Servidor de Aplicaciones y Formaci\u00f3n (Fedora) : Ejecuta un servidor web Apache con VirtualHosts para los departamentos de inform\u00e1tica y formaci\u00f3n. En el departamento de inform\u00e1tica aloja un sitio WordPress. En el departamento de formaci\u00f3n gestiona Moodle como plataforma educativa. Implementa un servicio de webmail Roundcube, el cual se conecta con el servidor de correo alojado en la subred p\u00fablica. IP privada: 10.0.1.229","title":"Subred Privada"},{"location":"osyred/#configuracion-de-red","text":"Para garantizar la comunicaci\u00f3n entre las m\u00e1quinas, se han establecido las siguientes configuraciones: Internet Gateway y NAT Gateway : Permiten el acceso a internet de las instancias en la subred p\u00fablica y facilitan la conectividad de la subred privada a internet sin exponerla directamente. Tablas de Rutas : Se han definido rutas para la comunicaci\u00f3n entre las subredes y la conexi\u00f3n externa. Configuraci\u00f3n de DNS : Se ha implementado un sistema de resoluci\u00f3n de nombres interno para gestionar los dominios de la infraestructura. Esta configuraci\u00f3n servir\u00e1 como base para la correcta implementaci\u00f3n de los servicios de red en fases posteriores del proyecto.","title":"Configuraci\u00f3n de Red"},{"location":"osyred/#creacion-de-la-vpc-y-subredes-en-aws","text":"En esta documentaci\u00f3n se detallar\u00e1 paso a paso el proceso de creaci\u00f3n de la VPC y la configuraci\u00f3n de las subredes en AWS.","title":"Creaci\u00f3n de la VPC y Subredes en AWS"},{"location":"osyred/#1-creacion-de-la-vpc","text":"Accedemos a la consola de AWS y nos dirigimos al servicio VPC . Hacemos clic en Crear VPC y completamos los siguientes datos: Guardamos la configuraci\u00f3n y verificamos que la VPC ha sido creada correctamente.","title":"1. Creaci\u00f3n de la VPC"},{"location":"osyred/#2-creacion-de-subredes","text":"","title":"2. Creaci\u00f3n de Subredes"},{"location":"osyred/#subred-publica_1","text":"Dentro del servicio de VPC, vamos a Subredes y hacemos clic en Crear subred . Completamos los siguientes campos: Guardamos la configuraci\u00f3n.","title":"Subred P\u00fablica"},{"location":"osyred/#subred-privada_1","text":"Repetimos el proceso anterior, pero con los siguientes datos: Guardamos la configuraci\u00f3n y verificamos su creaci\u00f3n.","title":"Subred Privada"},{"location":"osyred/#3-configuracion-del-internet-gateway","text":"Vamos a Gateways de Internet dentro de VPC y hacemos clic en Crear Gateway de Internet . Le damos el nombre SudoHeroes-IGW y confirmamos la creaci\u00f3n. Asociamos el Internet Gateway a la VPC vpc-sudoheroes .","title":"3. Configuraci\u00f3n del Internet Gateway"},{"location":"osyred/#4-configuracion-de-las-tablas-de-rutas","text":"","title":"4. Configuraci\u00f3n de las Tablas de Rutas"},{"location":"osyred/#tabla-de-rutas-de-la-subred-publica","text":"En Tablas de Rutas , seleccionamos la tabla de rutas creada autom\u00e1ticamente para la VPC. Agregamos una nueva regla: Guardamos la configuraci\u00f3n.","title":"Tabla de rutas de la subred p\u00fablica"},{"location":"osyred/#tabla-de-rutas-de-la-subred-privada","text":"Creamos una nueva NAT Gateway en la subred p\u00fablica con una IP el\u00e1stica asignada. Creamos una nueva tabla de rutas y la asociamos a la subred privada. Agregamos una nueva regla: Guardamos la configuraci\u00f3n. Esta documentaci\u00f3n describe detalladamente el proceso de creaci\u00f3n y configuraci\u00f3n de la VPC y sus subredes en AWS.","title":"Tabla de rutas de la subred privada"},{"location":"osyred/#creacion-de-instancias-en-las-subredes-de-aws","text":"En esta documentaci\u00f3n se describe paso a paso el proceso de creaci\u00f3n y configuraci\u00f3n de las instancias dentro de las subredes p\u00fablica y privada de la VPC en AWS.","title":"Creaci\u00f3n de Instancias en las Subredes de AWS"},{"location":"osyred/#1-creacion-de-la-instancia-fedora-servidor-dns-primario-en-la-subred-publica","text":"Accedemos a la consola de AWS y vamos al servicio EC2 . Hacemos clic en Lanzar Instancia y configuramos lo siguiente: Generamos o usamos un par de claves para acceder a la instancia. Le asignamos una IP el\u00e1stica. Comprobamos su conectividad.","title":"1. Creaci\u00f3n de la Instancia Fedora (Servidor DNS Primario) en la Subred P\u00fablica"},{"location":"osyred/#2-creacion-de-la-instancia-ubuntu-servidor-web-y-correo-en-la-subred-publica","text":"Repetimos el proceso anterior con las siguientes configuraciones: Le asignamos una direcci\u00f3n IP el\u00e1stica. Comprobamos su conectividad.","title":"2. Creaci\u00f3n de la Instancia Ubuntu (Servidor Web y Correo) en la Subred P\u00fablica"},{"location":"osyred/#3-creacion-de-la-instancia-fedora-servidor-de-aplicaciones-y-formacion-en-la-subred-privada","text":"Lanzamos una nueva instancia con las siguientes configuraciones: Para permitir la conexi\u00f3n SSH desde la subred p\u00fablica, configuramos una conexi\u00f3n a trav\u00e9s de una m\u00e1quina puente. Ahora nos podremos conectar a Fedora (interna) mediante SSH con Ubuntu y Fedora (externa), as\u00ed como podemos acceder a sus servicios gr\u00e1ficos con la m\u00e1quina Windows que vamos a crear a continuaci\u00f3n.","title":"3. Creaci\u00f3n de la Instancia Fedora (Servidor de Aplicaciones y Formaci\u00f3n) en la Subred Privada"},{"location":"osyred/#4-creacion-de-la-instancia-windows-server-2025-cliente-en-la-subred-publica","text":"Creamos una nueva instancia con la siguiente configuraci\u00f3n: Nombre: Cliente-Windows Sistema Operativo: Windows Server 2025 Subred: Subred-Publica Habilitar IP p\u00fablica: S\u00ed Grupo de seguridad: Permitimos RDP (3389). Configuramos credenciales de acceso y verificamos conectividad.","title":"4. Creaci\u00f3n de la Instancia Windows Server 2025 (Cliente) en la Subred P\u00fablica"},{"location":"osyred/#4-grupos-de-seguridad","text":"Configuraremos los grupos de seguridad acorde con los servicios de los que precisaremos durante el reto. Subred P\u00fablica Subred Privada Esta configuraci\u00f3n garantiza que cada instancia est\u00e9 correctamente desplegada y conectada dentro de la infraestructura de AWS.","title":"4. Grupos de seguridad"}]}