{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a SudoHeroes Tu destino definitivo para dominar el mundo de la administraci\u00f3n de sistemas y la ciberseguridad. Aprende, comparte y colabora con otros entusiastas de la tecnolog\u00eda. \u00bfQu\u00e9 ofrecemos? Tutoriales Pr\u00e1cticos : Gu\u00edas claras y detalladas sobre administraci\u00f3n de sistemas, redes y herramientas esenciales. Comunidad Activa : Comparte experiencias y soluciona problemas con otros administradores y desarrolladores. Noticias y Tendencias : Mant\u00e9n el ritmo con las \u00faltimas novedades del mundo IT. \u00bfPor qu\u00e9 SudoHeroes? Porque creemos que el conocimiento debe ser accesible y f\u00e1cil de aplicar . Nuestra plataforma est\u00e1 dise\u00f1ada para ayudarte a: Resolver problemas r\u00e1pidamente. Mejorar tus habilidades como administrador de sistemas. Explorar herramientas nuevas e innovadoras. \u00a1Empieza ahora! Explora nuestros tutoriales \u00danete a la comunidad Contacta con nosotros \"Con grandes permisos, vienen grandes responsabilidades.\" - La filosof\u00eda de todo H\u00e9roe del Shell \u00a1Gracias por ser parte de SudoHeroes!","title":"Inicio"},{"location":"#que-ofrecemos","text":"Tutoriales Pr\u00e1cticos : Gu\u00edas claras y detalladas sobre administraci\u00f3n de sistemas, redes y herramientas esenciales. Comunidad Activa : Comparte experiencias y soluciona problemas con otros administradores y desarrolladores. Noticias y Tendencias : Mant\u00e9n el ritmo con las \u00faltimas novedades del mundo IT.","title":"\u00bfQu\u00e9 ofrecemos?"},{"location":"#por-que-sudoheroes","text":"Porque creemos que el conocimiento debe ser accesible y f\u00e1cil de aplicar . Nuestra plataforma est\u00e1 dise\u00f1ada para ayudarte a: Resolver problemas r\u00e1pidamente. Mejorar tus habilidades como administrador de sistemas. Explorar herramientas nuevas e innovadoras.","title":"\u00bfPor qu\u00e9 SudoHeroes?"},{"location":"#empieza-ahora","text":"Explora nuestros tutoriales \u00danete a la comunidad Contacta con nosotros \"Con grandes permisos, vienen grandes responsabilidades.\" - La filosof\u00eda de todo H\u00e9roe del Shell","title":"\u00a1Empieza ahora!"},{"location":"#gracias-por-ser-parte-de-sudoheroes","text":"","title":"\u00a1Gracias por ser parte de SudoHeroes!"},{"location":"appweb/","text":"Instalaci\u00f3n y configuraci\u00f3n de WordPress y PhpMyAdmin WordPress es un gestor de contenido que nos proporciona un entorno para administrar y crear una p\u00e1gina web a trav\u00e9s de su interfaz gr\u00e1fica. Para ello, necesita que en el sistema haya un lenguaje de lado servidor (PHP) y una base de datos (MariaDB). Lo primero que vamos a hacer es descargar e instalar nuestro gestor de bases de datos. Una vez dentro de MariaDB creamos la base de datos. Y creamos nuestro usuario con todos los permisos. Ya tenemos nuestra base de datos lista. Debemos tener en cuenta que por ahora est\u00e1 vac\u00eda. Cuando instalemos WordPress desde la interfaz gr\u00e1fica se crear\u00e1n autom\u00e1ticamente las tablas necesarias. Nos vamos a mover al directorio /var/www/html y all\u00ed descargamos WordPress. En nuestro caso bajamos la \u00faltima versi\u00f3n. Si listamos el contenido del directorio veremos que ahora tenemos WordPress comprimido. Lo descomprimimos. En la carpeta WordPress viene un fichero de configuraci\u00f3n de ejemplo que vamos a usar de plantilla. Lo copiamos a otro fichero que se llamar\u00e1 wp-config.php. Abrimos el fichero de configuraci\u00f3n y modificamos las directivas se\u00f1aladas en rojo con los datos correspondientes. Como ves, lo \u00fanico que hemos hecho ha sido darle a WordPress la informaci\u00f3n de nuestra base de datos. Ahora vamos a hacer que WordPress y todo su contenido sea del usuario y grupo de apache y darle los permisos adecuados a todo el contenido de la carpeta WordPress. Hasta ahora solo hemos configurado la base de datos, y configurado WordPress para que la use. Ahora necesitamos configurar el virtual host en el que estar\u00e1 WordPress sirviendo su contenido. Este es el fichero de configuraci\u00f3n del virtual host de apache que servir\u00e1 el WordPress. Por ahora debemos ignorar el contenido de los directorios del webmail pues esas configuraciones se explican en la documentaci\u00f3n del servicio de correo. Ahora debemos crear un enlace simb\u00f3lico del virtual host de inform\u00e1tica hacia WordPress. Si todo est\u00e1 bien configurado, podemos abrir un navegador web en una m\u00e1quina que tenga comunicaci\u00f3n con la m\u00e1quina en la que hemos hecho las configuraciones. Nosotros lo hemos hecho con Windows. En cualquier caso, necesitamos de alguna manera poder resolver la URL que hemos puesto como en la directiva ServerName del fichero de configuraci\u00f3n del virtual host. En Windows, se hace en el fichero hosts. Como se ve en la imagen, a\u00f1adimos una l\u00ednea en la que indicamos que la IP de nuestra m\u00e1quina corresponde al nombre informatica-wp.sudohero.es Ahora ya podemos abrir un navegador y comprobarlo. Lo \u00fanico que queda es completar la instalaci\u00f3n desde el propio navegador, proporcionando los datos que nos pida. Al acabar veremos que tenemos disponible el panel de administraci\u00f3n a partir del cual podemos trabajar en la web. Esta es la p\u00e1gina de ejemplo. De momento tan solo tenemos acceso a WordPress, ahora vamos a implementar una manera m\u00e1s c\u00f3moda de administrar nuestra base de datos. PhpMyAdmin es una herramienta gr\u00e1fica que nos permite a trav\u00e9s de un navegador web administrar nuestra base de datos. Instalamos PhpMyAdmin. Como vamos a querer acceder a trav\u00e9s del mismo Windows con el que accedemos a WordPress, nos vamos al fichero de configuraci\u00f3n y cambiamos las directivas \"require local\" por \"require all granted\". Ahora, si intentamos acceder nos pedir\u00e1 las credenciales, es decir, el usuario y contrase\u00f1a que hab\u00edamos configurado la primera vez que accedimos a MariaDB. Una vez autenticados, el panel de administraci\u00f3n es accesible y vemos que a la izquierda aparece la base de datos del WordPress. Primero he instalado moodle en la carpeta de formaci\u00f3n. Pero por un error tonto, cre\u00e9 la carpeta sudohero.es y lo instal\u00e9 all\u00ed. As\u00ed que mov\u00ed todo a formaci\u00f3n para que no hubiese fallos por reduplicaci\u00f3n o sintaxis err\u00f3nea. Creo el fichero de configuraci\u00f3n para poder acceder a moodle a trav\u00e9s de la url https://formacion.sudohero.es/moodle/install.php Una vez hemos configurado nuestra m\u00e1quina fedora, introducimos la url en el navegador y comenzamos la instalaci\u00f3n. Para poder completar la instalaci\u00f3n tendremos que cambiar el max-imput vars, instalar soap y crear el archivo config.php. Una vez que moodle nos dice que hemos cumplido con todos los requisitos, nos llevar\u00e1 a la configuraci\u00f3n de nuestro moodle donde tendremos que a\u00f1adir el usuario gestor, por defecto es admin. Nosotros lo vamos a cambiar para que sea m\u00e1s f\u00e1cil de recordar ya que est\u00e1 dentro de la red privada de la empresa y es una pr\u00e1ctica por lo que no va a haber problemas de seguridad. Una vez hemos a\u00f1adido, aparecemos en la p\u00e1gina principal. Nos vamos a cursos y a\u00f1adimos los cursos que va a tener nuestro moodle: Tenemos esos cursos ya que en nuestra p\u00e1gina de formaci\u00f3n tenemos estos:","title":"Apps Web"},{"location":"appweb/#instalacion-y-configuracion-de-wordpress-y-phpmyadmin","text":"WordPress es un gestor de contenido que nos proporciona un entorno para administrar y crear una p\u00e1gina web a trav\u00e9s de su interfaz gr\u00e1fica. Para ello, necesita que en el sistema haya un lenguaje de lado servidor (PHP) y una base de datos (MariaDB). Lo primero que vamos a hacer es descargar e instalar nuestro gestor de bases de datos. Una vez dentro de MariaDB creamos la base de datos. Y creamos nuestro usuario con todos los permisos. Ya tenemos nuestra base de datos lista. Debemos tener en cuenta que por ahora est\u00e1 vac\u00eda. Cuando instalemos WordPress desde la interfaz gr\u00e1fica se crear\u00e1n autom\u00e1ticamente las tablas necesarias. Nos vamos a mover al directorio /var/www/html y all\u00ed descargamos WordPress. En nuestro caso bajamos la \u00faltima versi\u00f3n. Si listamos el contenido del directorio veremos que ahora tenemos WordPress comprimido. Lo descomprimimos. En la carpeta WordPress viene un fichero de configuraci\u00f3n de ejemplo que vamos a usar de plantilla. Lo copiamos a otro fichero que se llamar\u00e1 wp-config.php. Abrimos el fichero de configuraci\u00f3n y modificamos las directivas se\u00f1aladas en rojo con los datos correspondientes. Como ves, lo \u00fanico que hemos hecho ha sido darle a WordPress la informaci\u00f3n de nuestra base de datos. Ahora vamos a hacer que WordPress y todo su contenido sea del usuario y grupo de apache y darle los permisos adecuados a todo el contenido de la carpeta WordPress. Hasta ahora solo hemos configurado la base de datos, y configurado WordPress para que la use. Ahora necesitamos configurar el virtual host en el que estar\u00e1 WordPress sirviendo su contenido. Este es el fichero de configuraci\u00f3n del virtual host de apache que servir\u00e1 el WordPress. Por ahora debemos ignorar el contenido de los directorios del webmail pues esas configuraciones se explican en la documentaci\u00f3n del servicio de correo. Ahora debemos crear un enlace simb\u00f3lico del virtual host de inform\u00e1tica hacia WordPress. Si todo est\u00e1 bien configurado, podemos abrir un navegador web en una m\u00e1quina que tenga comunicaci\u00f3n con la m\u00e1quina en la que hemos hecho las configuraciones. Nosotros lo hemos hecho con Windows. En cualquier caso, necesitamos de alguna manera poder resolver la URL que hemos puesto como en la directiva ServerName del fichero de configuraci\u00f3n del virtual host. En Windows, se hace en el fichero hosts. Como se ve en la imagen, a\u00f1adimos una l\u00ednea en la que indicamos que la IP de nuestra m\u00e1quina corresponde al nombre informatica-wp.sudohero.es Ahora ya podemos abrir un navegador y comprobarlo. Lo \u00fanico que queda es completar la instalaci\u00f3n desde el propio navegador, proporcionando los datos que nos pida. Al acabar veremos que tenemos disponible el panel de administraci\u00f3n a partir del cual podemos trabajar en la web. Esta es la p\u00e1gina de ejemplo. De momento tan solo tenemos acceso a WordPress, ahora vamos a implementar una manera m\u00e1s c\u00f3moda de administrar nuestra base de datos. PhpMyAdmin es una herramienta gr\u00e1fica que nos permite a trav\u00e9s de un navegador web administrar nuestra base de datos. Instalamos PhpMyAdmin. Como vamos a querer acceder a trav\u00e9s del mismo Windows con el que accedemos a WordPress, nos vamos al fichero de configuraci\u00f3n y cambiamos las directivas \"require local\" por \"require all granted\". Ahora, si intentamos acceder nos pedir\u00e1 las credenciales, es decir, el usuario y contrase\u00f1a que hab\u00edamos configurado la primera vez que accedimos a MariaDB. Una vez autenticados, el panel de administraci\u00f3n es accesible y vemos que a la izquierda aparece la base de datos del WordPress. Primero he instalado moodle en la carpeta de formaci\u00f3n. Pero por un error tonto, cre\u00e9 la carpeta sudohero.es y lo instal\u00e9 all\u00ed. As\u00ed que mov\u00ed todo a formaci\u00f3n para que no hubiese fallos por reduplicaci\u00f3n o sintaxis err\u00f3nea. Creo el fichero de configuraci\u00f3n para poder acceder a moodle a trav\u00e9s de la url https://formacion.sudohero.es/moodle/install.php Una vez hemos configurado nuestra m\u00e1quina fedora, introducimos la url en el navegador y comenzamos la instalaci\u00f3n. Para poder completar la instalaci\u00f3n tendremos que cambiar el max-imput vars, instalar soap y crear el archivo config.php. Una vez que moodle nos dice que hemos cumplido con todos los requisitos, nos llevar\u00e1 a la configuraci\u00f3n de nuestro moodle donde tendremos que a\u00f1adir el usuario gestor, por defecto es admin. Nosotros lo vamos a cambiar para que sea m\u00e1s f\u00e1cil de recordar ya que est\u00e1 dentro de la red privada de la empresa y es una pr\u00e1ctica por lo que no va a haber problemas de seguridad. Una vez hemos a\u00f1adido, aparecemos en la p\u00e1gina principal. Nos vamos a cursos y a\u00f1adimos los cursos que va a tener nuestro moodle: Tenemos esos cursos ya que en nuestra p\u00e1gina de formaci\u00f3n tenemos estos:","title":"Instalaci\u00f3n y configuraci\u00f3n de WordPress y PhpMyAdmin"},{"location":"dns/","text":"Asignaci\u00f3n de IPs el\u00e1sticas y configuraci\u00f3n de DNS en IONOS Lo primero que haremos ser\u00e1 asignar direcciones IP el\u00e1sticas a nuestras instancias en AWS. Accedemos a la consola de AWS y seleccionamos la opci\u00f3n de direcciones IP el\u00e1sticas. Luego, asignamos una direcci\u00f3n IP a cada una de nuestras instancias. Una vez asignadas las IPs, nos conectamos a cada una de ellas por SSH y realizamos pruebas de conectividad mediante ping. A continuaci\u00f3n, configuramos las entradas DNS en nuestro dominio gestionado en IONOS. A\u00f1adimos dos registros tipo A, asignando cada IP el\u00e1stica a un subdominio correspondiente. Finalmente, verificamos que las entradas han sido creadas correctamente. Implementaci\u00f3n de un servidor DNS con BIND En esta documentaci\u00f3n se detallar\u00e1 el proceso de instalaci\u00f3n y configuraci\u00f3n de un servidor DNS primario en Fedora y un servidor secundario en Ubuntu, utilizando BIND. Para comenzar, instalamos el paquete BIND en la instancia Fedora con el siguiente comando: dnf install bind Editamos el archivo de configuraci\u00f3n principal de BIND en /etc/named.conf para definir las opciones b\u00e1sicas del servicio. Definimos la zona del dominio sudohero.es , especificando que se trata de una zona maestra. Configuramos el archivo de zona en /var/named/named.sudohero.es , definiendo los registros DNS. Aseguramos los permisos correctos para el archivo de zona y reiniciamos el servicio BIND. Realizamos una consulta con nslookup para comprobar la resoluci\u00f3n de nombres. chmod 640 /var/named/named.sudohero.es systemctl restart named A\u00f1adimos al fichero de zona el registro de la zona secundaria que crearemos a continuaci\u00f3n en la instancia Ubuntu. En la instancia Ubuntu, instalamos BIND9 con: apt install bind9 Definimos la zona esclava en el archivo /etc/bind/named.conf.local . Verificamos la transferencia de zona en los logs del sistema. Comprobamos en la instancia Ubuntu que la zona se ha transferido correctamente. Verificamos la configuraci\u00f3n de los servidores DNS con consultas nslookup . Finalmente, configuramos en IONOS el dominio para que utilice nuestros servidores DNS propios. Comprobamos que el servidor DNS funciona correctamente y se ha expandido por la red, asegurando que la resoluci\u00f3n de nombres est\u00e1 operativa y accesible globalmente, permitiendo que cualquier cliente en internet pueda resolver los dominios configurados. Con esto, hemos finalizado la implementaci\u00f3n del servidor DNS con BIND. Configuraci\u00f3n de Registros DNS para Acceso por SSH En esta documentaci\u00f3n se describe el proceso de configuraci\u00f3n de registros DNS para facilitar el acceso por SSH a las instancias de la infraestructura. 1. Edici\u00f3n de la Zona DNS Accedemos a la instancia del servidor DNS principal. Editamos el archivo de zona con el siguiente comando: nano /var/named/named.sudohero.es A\u00f1adimos los registros A correspondientes a cada instancia: tormenta IN A 10.0.1.229 lobezno IN A 34.195.168.226 phoenix IN A 34.197.102.164 2. Reinicio del Servidor DNS Guardamos los cambios y salimos del editor. Reiniciamos el servicio DNS para aplicar los cambios: systemctl restart named 3. Verificaci\u00f3n de la Configuraci\u00f3n Comprobamos que los registros se han propagado correctamente: nslookup tormenta.sudohero.es nslookup lobezno.sudohero.es nslookup phoenix.sudohero.es Probamos la conexi\u00f3n SSH utilizando los nombres de dominio en lugar de direcciones IP: ssh -A fedora@phoenix.sudohero.es ssh -A ubuntu@lobezno.sudohero.es Nota: La instancia tormenta.sudohero.es se encuentra en la subred privada, por lo que solo se podr\u00e1 acceder a ella desde lobezno.sudohero.es o phoenix.sudohero.es mediante SSH. ssh fedora@tormenta.sudohero.es Esta configuraci\u00f3n permite un acceso m\u00e1s c\u00f3modo y organizado a las instancias a trav\u00e9s de nombres de dominio en lugar de direcciones IP.","title":"DNS"},{"location":"dns/#asignacion-de-ips-elasticas-y-configuracion-de-dns-en-ionos","text":"Lo primero que haremos ser\u00e1 asignar direcciones IP el\u00e1sticas a nuestras instancias en AWS. Accedemos a la consola de AWS y seleccionamos la opci\u00f3n de direcciones IP el\u00e1sticas. Luego, asignamos una direcci\u00f3n IP a cada una de nuestras instancias. Una vez asignadas las IPs, nos conectamos a cada una de ellas por SSH y realizamos pruebas de conectividad mediante ping. A continuaci\u00f3n, configuramos las entradas DNS en nuestro dominio gestionado en IONOS. A\u00f1adimos dos registros tipo A, asignando cada IP el\u00e1stica a un subdominio correspondiente. Finalmente, verificamos que las entradas han sido creadas correctamente.","title":"Asignaci\u00f3n de IPs el\u00e1sticas y configuraci\u00f3n de DNS en IONOS"},{"location":"dns/#implementacion-de-un-servidor-dns-con-bind","text":"En esta documentaci\u00f3n se detallar\u00e1 el proceso de instalaci\u00f3n y configuraci\u00f3n de un servidor DNS primario en Fedora y un servidor secundario en Ubuntu, utilizando BIND. Para comenzar, instalamos el paquete BIND en la instancia Fedora con el siguiente comando: dnf install bind Editamos el archivo de configuraci\u00f3n principal de BIND en /etc/named.conf para definir las opciones b\u00e1sicas del servicio. Definimos la zona del dominio sudohero.es , especificando que se trata de una zona maestra. Configuramos el archivo de zona en /var/named/named.sudohero.es , definiendo los registros DNS. Aseguramos los permisos correctos para el archivo de zona y reiniciamos el servicio BIND. Realizamos una consulta con nslookup para comprobar la resoluci\u00f3n de nombres. chmod 640 /var/named/named.sudohero.es systemctl restart named A\u00f1adimos al fichero de zona el registro de la zona secundaria que crearemos a continuaci\u00f3n en la instancia Ubuntu. En la instancia Ubuntu, instalamos BIND9 con: apt install bind9 Definimos la zona esclava en el archivo /etc/bind/named.conf.local . Verificamos la transferencia de zona en los logs del sistema. Comprobamos en la instancia Ubuntu que la zona se ha transferido correctamente. Verificamos la configuraci\u00f3n de los servidores DNS con consultas nslookup . Finalmente, configuramos en IONOS el dominio para que utilice nuestros servidores DNS propios. Comprobamos que el servidor DNS funciona correctamente y se ha expandido por la red, asegurando que la resoluci\u00f3n de nombres est\u00e1 operativa y accesible globalmente, permitiendo que cualquier cliente en internet pueda resolver los dominios configurados. Con esto, hemos finalizado la implementaci\u00f3n del servidor DNS con BIND.","title":"Implementaci\u00f3n de un servidor DNS con BIND"},{"location":"dns/#configuracion-de-registros-dns-para-acceso-por-ssh","text":"En esta documentaci\u00f3n se describe el proceso de configuraci\u00f3n de registros DNS para facilitar el acceso por SSH a las instancias de la infraestructura.","title":"Configuraci\u00f3n de Registros DNS para Acceso por SSH"},{"location":"dns/#1-edicion-de-la-zona-dns","text":"Accedemos a la instancia del servidor DNS principal. Editamos el archivo de zona con el siguiente comando: nano /var/named/named.sudohero.es A\u00f1adimos los registros A correspondientes a cada instancia: tormenta IN A 10.0.1.229 lobezno IN A 34.195.168.226 phoenix IN A 34.197.102.164","title":"1. Edici\u00f3n de la Zona DNS"},{"location":"dns/#2-reinicio-del-servidor-dns","text":"Guardamos los cambios y salimos del editor. Reiniciamos el servicio DNS para aplicar los cambios: systemctl restart named","title":"2. Reinicio del Servidor DNS"},{"location":"dns/#3-verificacion-de-la-configuracion","text":"Comprobamos que los registros se han propagado correctamente: nslookup tormenta.sudohero.es nslookup lobezno.sudohero.es nslookup phoenix.sudohero.es Probamos la conexi\u00f3n SSH utilizando los nombres de dominio en lugar de direcciones IP: ssh -A fedora@phoenix.sudohero.es ssh -A ubuntu@lobezno.sudohero.es Nota: La instancia tormenta.sudohero.es se encuentra en la subred privada, por lo que solo se podr\u00e1 acceder a ella desde lobezno.sudohero.es o phoenix.sudohero.es mediante SSH. ssh fedora@tormenta.sudohero.es Esta configuraci\u00f3n permite un acceso m\u00e1s c\u00f3modo y organizado a las instancias a trav\u00e9s de nombres de dominio en lugar de direcciones IP.","title":"3. Verificaci\u00f3n de la Configuraci\u00f3n"},{"location":"doc/","text":"Instalaci\u00f3n de MkDocs y despliegue en GitHub Pages En esta documentaci\u00f3n se describe el proceso de instalaci\u00f3n de MkDocs en una instancia Ubuntu y su configuraci\u00f3n para desplegar una documentaci\u00f3n en GitHub Pages. Para comenzar, instalamos MkDocs con el siguiente comando: sudo apt install mkdocs Creamos un nuevo proyecto con MkDocs y verificamos su estructura de archivos: mkdocs new sudoheroes cd sudoheroes ls -l Instalamos el tema cinder para personalizar la apariencia de la documentaci\u00f3n: sudo pip install mkdocs-cinder --break-system-packages Modificamos el archivo de configuraci\u00f3n mkdocs.yml para definir la estructura del sitio y el tema: Verificamos que la estructura de archivos sea la correcta antes de proceder al despliegue: Realizamos un primer commit y preparamos la configuraci\u00f3n para subir la documentaci\u00f3n a GitHub: git add . git commit -m \"Peque\u00f1as modificaciones\" git push origin main Finalmente, desplegamos la documentaci\u00f3n en GitHub Pages con el siguiente comando: mkdocs gh-deploy Confirmamos que la documentaci\u00f3n ya est\u00e1 accesible en la URL generada por GitHub Pages: Con esto, hemos finalizado la instalaci\u00f3n y configuraci\u00f3n de MkDocs en Ubuntu con despliegue en GitHub Pages.","title":"Doc"},{"location":"doc/#instalacion-de-mkdocs-y-despliegue-en-github-pages","text":"En esta documentaci\u00f3n se describe el proceso de instalaci\u00f3n de MkDocs en una instancia Ubuntu y su configuraci\u00f3n para desplegar una documentaci\u00f3n en GitHub Pages. Para comenzar, instalamos MkDocs con el siguiente comando: sudo apt install mkdocs Creamos un nuevo proyecto con MkDocs y verificamos su estructura de archivos: mkdocs new sudoheroes cd sudoheroes ls -l Instalamos el tema cinder para personalizar la apariencia de la documentaci\u00f3n: sudo pip install mkdocs-cinder --break-system-packages Modificamos el archivo de configuraci\u00f3n mkdocs.yml para definir la estructura del sitio y el tema: Verificamos que la estructura de archivos sea la correcta antes de proceder al despliegue: Realizamos un primer commit y preparamos la configuraci\u00f3n para subir la documentaci\u00f3n a GitHub: git add . git commit -m \"Peque\u00f1as modificaciones\" git push origin main Finalmente, desplegamos la documentaci\u00f3n en GitHub Pages con el siguiente comando: mkdocs gh-deploy Confirmamos que la documentaci\u00f3n ya est\u00e1 accesible en la URL generada por GitHub Pages: Con esto, hemos finalizado la instalaci\u00f3n y configuraci\u00f3n de MkDocs en Ubuntu con despliegue en GitHub Pages.","title":"Instalaci\u00f3n de MkDocs y despliegue en GitHub Pages"},{"location":"http/","text":"Creaci\u00f3n virtual host de empresa y ventas y certificaci\u00f3n con Let's Encrypt Creamos los directorios de empresa y ventas. Creamos el index de empresa. Creamos el index de ventas. Mostramos la configuraci\u00f3n que le hemos dado a empresa para que se pueda acceder por http. Mostramos la configuraci\u00f3n que le hemos dado a ventas para que se pueda acceder por http. y por https firmado por Let's encrypt. Certificamos con Let's Encrypt formacion.sudohero.es Ahora si a trav\u00e9s del navegador entramos a ventas podemos ver como es la web. Este es el certificado de Let's Encrypt que esta usando ventas para funcionar con TLS/SSL. Empresa no esta certificado, por lo que se accede por el puerto 80. Creaci\u00f3n de Virtual Host para inform\u00e1tica y formaci\u00f3n. Lo primero que debemos hacer es crear el primer fichero de nuestra web. Creamos el directorio /var/www/informatica y alli el index.html y le damos contenido. Como vamos a tener dos virtual host creamos tambi\u00e9n el directorio /var/www/formacion y su propio index.html. Le damos contenido. Ahora que ya tenemos algo que mostrar, en el directorio donde almacenamos los ficheros de configuraci\u00f3n de Apache, creamos el fichero de configuraci\u00f3n tanto de inform\u00e1tica como de formaci\u00f3n. Necesitamos que ambos ficheros tengan las directivas adecuadas a lo que queremos para nuestros virtual hosts. Es importante definir en que puerto escucha, el nombre que sirve, el fichero que va a mostrar y la localizaci\u00f3n de los ficheros de configuraci\u00f3n. Como vamos a cambiar la ruta de los logs de errores y acceso, necesitamos crearlos. Esto es el contenido de informatica_error_log. Esto es el contenido de informatica_access_log. Esto es el contenido de formacion_error_log. Esto es el contenido de formacion_access_log. Ahora ya podemos comprobar que son accesibles desde un navegador. Esta es la web del departamento de inform\u00e1tica. Y esta es la web del departamento de formaci\u00f3n. Implementar TLS/SSL al virtual host de formaci\u00f3n. Una vez hemos creado nuestro virtual host de formaci\u00f3n vamos a hacer que funcione con HTTPS. Para ello necesitamos crear un archivo .pem y un archivo .key. El archivo .key lo generamos con el comando openssl genrsa -out /etc/ssl/private/seguro.key 2048. El archivo .pem lo generamos con el comando openssl req -new -key /etc/ssl/private/seguro.key -x509 -days 365 -out /etc/ssl/certs/seguro.pem. Una vez tenemos ambos archivos hay que cambiar la configuraci\u00f3n del virtual host de formaci\u00f3n. Necesitamos que escuche por el puerto 443 y especificarle las rutas de los ficheros .pem y .key. Ahora si accedemos a formaci\u00f3n podremos ver que funciona con TLS/SSL. Este es el certificado.","title":"HTTP"},{"location":"http/#creacion-virtual-host-de-empresa-y-ventas-y-certificacion-con-lets-encrypt","text":"Creamos los directorios de empresa y ventas. Creamos el index de empresa. Creamos el index de ventas. Mostramos la configuraci\u00f3n que le hemos dado a empresa para que se pueda acceder por http. Mostramos la configuraci\u00f3n que le hemos dado a ventas para que se pueda acceder por http. y por https firmado por Let's encrypt. Certificamos con Let's Encrypt formacion.sudohero.es Ahora si a trav\u00e9s del navegador entramos a ventas podemos ver como es la web. Este es el certificado de Let's Encrypt que esta usando ventas para funcionar con TLS/SSL. Empresa no esta certificado, por lo que se accede por el puerto 80.","title":"Creaci\u00f3n virtual host de empresa y ventas y certificaci\u00f3n con Let's Encrypt"},{"location":"http/#creacion-de-virtual-host-para-informatica-y-formacion","text":"Lo primero que debemos hacer es crear el primer fichero de nuestra web. Creamos el directorio /var/www/informatica y alli el index.html y le damos contenido. Como vamos a tener dos virtual host creamos tambi\u00e9n el directorio /var/www/formacion y su propio index.html. Le damos contenido. Ahora que ya tenemos algo que mostrar, en el directorio donde almacenamos los ficheros de configuraci\u00f3n de Apache, creamos el fichero de configuraci\u00f3n tanto de inform\u00e1tica como de formaci\u00f3n. Necesitamos que ambos ficheros tengan las directivas adecuadas a lo que queremos para nuestros virtual hosts. Es importante definir en que puerto escucha, el nombre que sirve, el fichero que va a mostrar y la localizaci\u00f3n de los ficheros de configuraci\u00f3n. Como vamos a cambiar la ruta de los logs de errores y acceso, necesitamos crearlos. Esto es el contenido de informatica_error_log. Esto es el contenido de informatica_access_log. Esto es el contenido de formacion_error_log. Esto es el contenido de formacion_access_log. Ahora ya podemos comprobar que son accesibles desde un navegador. Esta es la web del departamento de inform\u00e1tica. Y esta es la web del departamento de formaci\u00f3n.","title":"Creaci\u00f3n de Virtual Host para inform\u00e1tica y formaci\u00f3n."},{"location":"http/#implementar-tlsssl-al-virtual-host-de-formacion","text":"Una vez hemos creado nuestro virtual host de formaci\u00f3n vamos a hacer que funcione con HTTPS. Para ello necesitamos crear un archivo .pem y un archivo .key. El archivo .key lo generamos con el comando openssl genrsa -out /etc/ssl/private/seguro.key 2048. El archivo .pem lo generamos con el comando openssl req -new -key /etc/ssl/private/seguro.key -x509 -days 365 -out /etc/ssl/certs/seguro.pem. Una vez tenemos ambos archivos hay que cambiar la configuraci\u00f3n del virtual host de formaci\u00f3n. Necesitamos que escuche por el puerto 443 y especificarle las rutas de los ficheros .pem y .key. Ahora si accedemos a formaci\u00f3n podremos ver que funciona con TLS/SSL. Este es el certificado.","title":"Implementar TLS/SSL al virtual host de formaci\u00f3n."},{"location":"mail/","text":"Configuraci\u00f3n del Servidor de Correo con Postfix y Dovecot Instalaci\u00f3n y Configuraci\u00f3n de Postfix Instalaci\u00f3n de Postfix: sudo apt update && sudo apt install postfix -y Configuraci\u00f3n del dominio: Durante la instalaci\u00f3n, seleccionamos \"Sitio de Internet\" y establecemos nuestro dominio. Editamos el archivo de configuraci\u00f3n: bash sudo nano /etc/postfix/main.cf Nos aseguramos de definir: myhostname = mail.sudohero.es mydomain = sudohero.es myorigin = $mydomain inet_interfaces = all home_mailbox = Maildir/ Creaci\u00f3n de usuarios para correo: sudo adduser lucas sudo adduser alvaro Instalaci\u00f3n de Mailutils y creaci\u00f3n de buzones: Instalamos la utilidad mailutils para probar nuestro servicio de Postfix, creamos los directorios mail de los usuarios que vamos a utilizar. sudo apt install mailutils -y mkdir -p /var/mail/lucas /var/mail/alvaro Tras reiniciar Postfix, utilizamos mailutils para enviar un correo desde la cuenta principal del equipo (Ubuntu) al usuario lucas. Revisamos su bandeja de entrada y comprobamos que ha recibido el correo. Env\u00edo de correo desde \u00c1lvaro a Lucas: su - alvaro echo \"Correo de prueba para lucas\" | mail -s \"Test para lucas\" lucas@sudohero.es Luego, verificamos la bandeja de Lucas. Instalaci\u00f3n y Configuraci\u00f3n de Dovecot Instalaci\u00f3n de Dovecot: sudo apt install dovecot-core dovecot-imapd -y Configuraci\u00f3n del Maildir: Editamos el archivo 10-mail.conf : bash sudo nano /etc/dovecot/conf.d/10-mail.conf Modificamos: mail_location = maildir:~/Maildir Configuraci\u00f3n de autenticaci\u00f3n: Editamos 10-auth.conf : bash sudo nano /etc/dovecot/conf.d/10-auth.conf Cambiamos: disable_plaintext_auth = yes auth_mechanisms = plain login Habilitaci\u00f3n de IMAPS: Editamos dovecot.conf : bash sudo nano /etc/dovecot/dovecot.conf Modificamos: protocols = imaps Configuraci\u00f3n del servicio IMAP: Editamos 10-master.conf : bash sudo nano /etc/dovecot/conf.d/10-master.conf A\u00f1adimos: service imap-login { inet_listener imaps { port = 993 ssl = yes } } Configuraci\u00f3n SSL: Editamos 10-ssl.conf : bash sudo nano /etc/dovecot/conf.d/10-ssl.conf Especificamos los certificados: ssl = required ssl_cert = </etc/ssl/certs/ssl-cert-snakeoil.pem ssl_key = </etc/ssl/private/ssl-cert-snakeoil.key Creaci\u00f3n de directorios Maildir para los usuarios: sudo mkdir -p /home/usuario/Maildir Prueba de Acceso al Correo Comprobar conexi\u00f3n IMAP: openssl s_client -connect localhost:993 -quiet Iniciar sesi\u00f3n con usuario y contrase\u00f1a: a login lucas contrase\u00f1a Si la autenticaci\u00f3n es exitosa, el servidor responder\u00e1 con a OK Logged in . Con esta configuraci\u00f3n, hemos implementado un servidor de correo funcional basado en Postfix y Dovecot, permitiendo el env\u00edo y recepci\u00f3n de correos con autenticaci\u00f3n segura y soporte para IMAPS. Instalaci\u00f3n de Roundcube en Fedora Instalaci\u00f3n de Apache y preparaci\u00f3n del entorno Lo primero que debemos hacer es instalar y habilitar Apache para que inicie con el sistema: sudo systemctl start httpd.service sudo systemctl enable httpd.service Descarga e instalaci\u00f3n de Roundcube Descargamos la \u00faltima versi\u00f3n de Roundcube, la descomprimimos y la movemos al directorio web: sudo mv roundcubemail-1.6.10 /var/www/html/roundcube Configuraci\u00f3n de VirtualHost Creamos un archivo de configuraci\u00f3n en Apache para Roundcube: sudo nano /etc/httpd/conf.d/roundcube.conf A\u00f1adimos el siguiente contenido: Guardamos los cambios y verificamos la configuraci\u00f3n: sudo httpd -t Si la sintaxis es correcta, reiniciamos Apache: sudo systemctl restart httpd.service Instalaci\u00f3n y configuraci\u00f3n de Roundcube Desde la m\u00e1quina cliente Windows, accedemos a la instalaci\u00f3n de Roundcube a trav\u00e9s del navegador: http://informatica.sudohero.es/installer/ Verificamos que todos los m\u00f3dulos PHP requeridos est\u00e9n instalados y completamos la configuraci\u00f3n de Roundcube. Pruebas de SMTP e IMAP Para asegurarnos de que el servidor de correo funciona correctamente, realizamos pruebas con las siguientes configuraciones: Prueba de SMTP: Prueba de IMAP: Acceso a Roundcube Webmail Una vez finalizada la instalaci\u00f3n, accedemos a Roundcube Webmail e iniciamos sesi\u00f3n con nuestras credenciales: http://informatica.sudohero.es/ Verificamos la bandeja de entrada y confirmamos la recepci\u00f3n de correos, como el enviado por alvaro@mail.sudohero.es a lucas@mail.sudohero.es .","title":"Mail"},{"location":"mail/#configuracion-del-servidor-de-correo-con-postfix-y-dovecot","text":"","title":"Configuraci\u00f3n del Servidor de Correo con Postfix y Dovecot"},{"location":"mail/#instalacion-y-configuracion-de-postfix","text":"Instalaci\u00f3n de Postfix: sudo apt update && sudo apt install postfix -y Configuraci\u00f3n del dominio: Durante la instalaci\u00f3n, seleccionamos \"Sitio de Internet\" y establecemos nuestro dominio. Editamos el archivo de configuraci\u00f3n: bash sudo nano /etc/postfix/main.cf Nos aseguramos de definir: myhostname = mail.sudohero.es mydomain = sudohero.es myorigin = $mydomain inet_interfaces = all home_mailbox = Maildir/ Creaci\u00f3n de usuarios para correo: sudo adduser lucas sudo adduser alvaro Instalaci\u00f3n de Mailutils y creaci\u00f3n de buzones: Instalamos la utilidad mailutils para probar nuestro servicio de Postfix, creamos los directorios mail de los usuarios que vamos a utilizar. sudo apt install mailutils -y mkdir -p /var/mail/lucas /var/mail/alvaro Tras reiniciar Postfix, utilizamos mailutils para enviar un correo desde la cuenta principal del equipo (Ubuntu) al usuario lucas. Revisamos su bandeja de entrada y comprobamos que ha recibido el correo. Env\u00edo de correo desde \u00c1lvaro a Lucas: su - alvaro echo \"Correo de prueba para lucas\" | mail -s \"Test para lucas\" lucas@sudohero.es Luego, verificamos la bandeja de Lucas.","title":"Instalaci\u00f3n y Configuraci\u00f3n de Postfix"},{"location":"mail/#instalacion-y-configuracion-de-dovecot","text":"Instalaci\u00f3n de Dovecot: sudo apt install dovecot-core dovecot-imapd -y Configuraci\u00f3n del Maildir: Editamos el archivo 10-mail.conf : bash sudo nano /etc/dovecot/conf.d/10-mail.conf Modificamos: mail_location = maildir:~/Maildir Configuraci\u00f3n de autenticaci\u00f3n: Editamos 10-auth.conf : bash sudo nano /etc/dovecot/conf.d/10-auth.conf Cambiamos: disable_plaintext_auth = yes auth_mechanisms = plain login Habilitaci\u00f3n de IMAPS: Editamos dovecot.conf : bash sudo nano /etc/dovecot/dovecot.conf Modificamos: protocols = imaps Configuraci\u00f3n del servicio IMAP: Editamos 10-master.conf : bash sudo nano /etc/dovecot/conf.d/10-master.conf A\u00f1adimos: service imap-login { inet_listener imaps { port = 993 ssl = yes } } Configuraci\u00f3n SSL: Editamos 10-ssl.conf : bash sudo nano /etc/dovecot/conf.d/10-ssl.conf Especificamos los certificados: ssl = required ssl_cert = </etc/ssl/certs/ssl-cert-snakeoil.pem ssl_key = </etc/ssl/private/ssl-cert-snakeoil.key Creaci\u00f3n de directorios Maildir para los usuarios: sudo mkdir -p /home/usuario/Maildir","title":"Instalaci\u00f3n y Configuraci\u00f3n de Dovecot"},{"location":"mail/#prueba-de-acceso-al-correo","text":"Comprobar conexi\u00f3n IMAP: openssl s_client -connect localhost:993 -quiet Iniciar sesi\u00f3n con usuario y contrase\u00f1a: a login lucas contrase\u00f1a Si la autenticaci\u00f3n es exitosa, el servidor responder\u00e1 con a OK Logged in . Con esta configuraci\u00f3n, hemos implementado un servidor de correo funcional basado en Postfix y Dovecot, permitiendo el env\u00edo y recepci\u00f3n de correos con autenticaci\u00f3n segura y soporte para IMAPS.","title":"Prueba de Acceso al Correo"},{"location":"mail/#instalacion-de-roundcube-en-fedora","text":"","title":"Instalaci\u00f3n de Roundcube en Fedora"},{"location":"mail/#instalacion-de-apache-y-preparacion-del-entorno","text":"Lo primero que debemos hacer es instalar y habilitar Apache para que inicie con el sistema: sudo systemctl start httpd.service sudo systemctl enable httpd.service","title":"Instalaci\u00f3n de Apache y preparaci\u00f3n del entorno"},{"location":"mail/#descarga-e-instalacion-de-roundcube","text":"Descargamos la \u00faltima versi\u00f3n de Roundcube, la descomprimimos y la movemos al directorio web: sudo mv roundcubemail-1.6.10 /var/www/html/roundcube","title":"Descarga e instalaci\u00f3n de Roundcube"},{"location":"mail/#configuracion-de-virtualhost","text":"Creamos un archivo de configuraci\u00f3n en Apache para Roundcube: sudo nano /etc/httpd/conf.d/roundcube.conf A\u00f1adimos el siguiente contenido: Guardamos los cambios y verificamos la configuraci\u00f3n: sudo httpd -t Si la sintaxis es correcta, reiniciamos Apache: sudo systemctl restart httpd.service","title":"Configuraci\u00f3n de VirtualHost"},{"location":"mail/#instalacion-y-configuracion-de-roundcube","text":"Desde la m\u00e1quina cliente Windows, accedemos a la instalaci\u00f3n de Roundcube a trav\u00e9s del navegador: http://informatica.sudohero.es/installer/ Verificamos que todos los m\u00f3dulos PHP requeridos est\u00e9n instalados y completamos la configuraci\u00f3n de Roundcube.","title":"Instalaci\u00f3n y configuraci\u00f3n de Roundcube"},{"location":"mail/#pruebas-de-smtp-e-imap","text":"Para asegurarnos de que el servidor de correo funciona correctamente, realizamos pruebas con las siguientes configuraciones: Prueba de SMTP: Prueba de IMAP:","title":"Pruebas de SMTP e IMAP"},{"location":"mail/#acceso-a-roundcube-webmail","text":"Una vez finalizada la instalaci\u00f3n, accedemos a Roundcube Webmail e iniciamos sesi\u00f3n con nuestras credenciales: http://informatica.sudohero.es/ Verificamos la bandeja de entrada y confirmamos la recepci\u00f3n de correos, como el enviado por alvaro@mail.sudohero.es a lucas@mail.sudohero.es .","title":"Acceso a Roundcube Webmail"},{"location":"osyred/","text":"Sistemas Operativos y Configuraci\u00f3n de Red Diagrama de Red A continuaci\u00f3n, se presenta el diagrama de la infraestructura de red dise\u00f1ada: Infraestructura en AWS Nuestra infraestructura est\u00e1 alojada en la nube de AWS dentro de una VPC, la cual est\u00e1 dividida en dos subredes: Subred P\u00fablica (10.0.0.0/24) : Contiene los servidores accesibles desde internet. Subred Privada (10.0.1.0/24) : Contiene servidores internos sin acceso directo a internet. AWS proporciona los servicios necesarios para la gesti\u00f3n del tr\u00e1fico entre subredes y hacia el exterior, por lo que no es necesario contar con una m\u00e1quina dedicada como router. En su lugar, se utilizan las herramientas nativas de AWS, como las tablas de rutas y las gateways de internet y NAT. Adem\u00e1s, AWS proporciona un acceso seguro a las m\u00e1quinas mediante SSH, RDP y SFTP, utilizando claves para garantizar la autenticaci\u00f3n y la integridad de las conexiones remotas. Servidores y Funcionalidad Subred P\u00fablica Servidor DNS Primario (Fedora) : Encargado exclusivamente del servicio de resoluci\u00f3n de nombres mediante BIND. IP privada: 10.0.0.138 Servidor Web, Correo y DNS Secundario (Ubuntu 24.04) : Funciona como respaldo del servidor DNS primario. Aloja un servidor web Nginx con la web principal y la web del departamento de ventas. Implementa un servidor de correo basado en Postfix y Dovecot. Ejecuta MkDocs para la gesti\u00f3n y publicaci\u00f3n de documentaci\u00f3n en GitHub Pages. IP privada: 10.0.0.89 Cliente Windows Server 2025 : Se utiliza para visualizar y probar todas las aplicaciones que requieren una interfaz gr\u00e1fica. Est\u00e1 alojado en la subred p\u00fablica. Subred Privada Servidor de Aplicaciones y Formaci\u00f3n (Fedora) : Ejecuta un servidor web Apache con VirtualHosts para los departamentos de inform\u00e1tica y formaci\u00f3n. En el departamento de inform\u00e1tica aloja un sitio WordPress. En el departamento de formaci\u00f3n gestiona Moodle como plataforma educativa. Implementa un servicio de webmail Roundcube, el cual se conecta con el servidor de correo alojado en la subred p\u00fablica. IP privada: 10.0.1.229 Configuraci\u00f3n de Red Para garantizar la comunicaci\u00f3n entre las m\u00e1quinas, se han establecido las siguientes configuraciones: Internet Gateway y NAT Gateway : Permiten el acceso a internet de las instancias en la subred p\u00fablica y facilitan la conectividad de la subred privada a internet sin exponerla directamente. Tablas de Rutas : Se han definido rutas para la comunicaci\u00f3n entre las subredes y la conexi\u00f3n externa. Configuraci\u00f3n de DNS : Se ha implementado un sistema de resoluci\u00f3n de nombres interno para gestionar los dominios de la infraestructura. Esta configuraci\u00f3n servir\u00e1 como base para la correcta implementaci\u00f3n de los servicios de red en fases posteriores del proyecto. Creaci\u00f3n de la VPC y Subredes en AWS En esta documentaci\u00f3n se detallar\u00e1 paso a paso el proceso de creaci\u00f3n de la VPC y la configuraci\u00f3n de las subredes en AWS. 1. Creaci\u00f3n de la VPC Accedemos a la consola de AWS y nos dirigimos al servicio VPC . Hacemos clic en Crear VPC y completamos los siguientes datos: Guardamos la configuraci\u00f3n y verificamos que la VPC ha sido creada correctamente. 2. Creaci\u00f3n de Subredes Subred P\u00fablica Dentro del servicio de VPC, vamos a Subredes y hacemos clic en Crear subred . Completamos los siguientes campos: Guardamos la configuraci\u00f3n. Subred Privada Repetimos el proceso anterior, pero con los siguientes datos: Guardamos la configuraci\u00f3n y verificamos su creaci\u00f3n. 3. Configuraci\u00f3n del Internet Gateway Vamos a Gateways de Internet dentro de VPC y hacemos clic en Crear Gateway de Internet . Le damos el nombre SudoHeroes-IGW y confirmamos la creaci\u00f3n. Asociamos el Internet Gateway a la VPC vpc-sudoheroes . 4. Configuraci\u00f3n de las Tablas de Rutas Tabla de rutas de la subred p\u00fablica En Tablas de Rutas , seleccionamos la tabla de rutas creada autom\u00e1ticamente para la VPC. Agregamos una nueva regla: Guardamos la configuraci\u00f3n. Tabla de rutas de la subred privada Creamos una nueva NAT Gateway en la subred p\u00fablica con una IP el\u00e1stica asignada. Creamos una nueva tabla de rutas y la asociamos a la subred privada. Agregamos una nueva regla: Guardamos la configuraci\u00f3n. Esta documentaci\u00f3n describe detalladamente el proceso de creaci\u00f3n y configuraci\u00f3n de la VPC y sus subredes en AWS. Creaci\u00f3n de Instancias en las Subredes de AWS En esta documentaci\u00f3n se describe paso a paso el proceso de creaci\u00f3n y configuraci\u00f3n de las instancias dentro de las subredes p\u00fablica y privada de la VPC en AWS. 1. Creaci\u00f3n de la Instancia Fedora (Servidor DNS Primario) en la Subred P\u00fablica Accedemos a la consola de AWS y vamos al servicio EC2 . Hacemos clic en Lanzar Instancia y configuramos lo siguiente: Generamos o usamos un par de claves para acceder a la instancia. Le asignamos una IP el\u00e1stica. Comprobamos su conectividad. 2. Creaci\u00f3n de la Instancia Ubuntu (Servidor Web y Correo) en la Subred P\u00fablica Repetimos el proceso anterior con las siguientes configuraciones: Le asignamos una direcci\u00f3n IP el\u00e1stica. Comprobamos su conectividad. 3. Creaci\u00f3n de la Instancia Fedora (Servidor de Aplicaciones y Formaci\u00f3n) en la Subred Privada Lanzamos una nueva instancia con las siguientes configuraciones: Para permitir la conexi\u00f3n SSH desde la subred p\u00fablica, configuramos una conexi\u00f3n a trav\u00e9s de una m\u00e1quina puente. Ahora nos podremos conectar a Fedora (interna) mediante SSH con Ubuntu y Fedora (externa), as\u00ed como podemos acceder a sus servicios gr\u00e1ficos con la m\u00e1quina Windows que vamos a crear a continuaci\u00f3n. 4. Creaci\u00f3n de la Instancia Windows Server 2025 (Cliente) en la Subred P\u00fablica Creamos una nueva instancia con la siguiente configuraci\u00f3n: Nombre: Cliente-Windows Sistema Operativo: Windows Server 2025 Subred: Subred-Publica Habilitar IP p\u00fablica: S\u00ed Grupo de seguridad: Permitimos RDP (3389). Configuramos credenciales de acceso y verificamos conectividad. 5. Grupos de seguridad Configuraremos los grupos de seguridad acorde con los servicios de los que precisaremos durante el reto. Subred P\u00fablica Subred Privada Esta configuraci\u00f3n garantiza que cada instancia est\u00e9 correctamente desplegada y conectada dentro de la infraestructura de AWS.","title":"SOs y Red"},{"location":"osyred/#sistemas-operativos-y-configuracion-de-red","text":"","title":"Sistemas Operativos y Configuraci\u00f3n de Red"},{"location":"osyred/#diagrama-de-red","text":"A continuaci\u00f3n, se presenta el diagrama de la infraestructura de red dise\u00f1ada:","title":"Diagrama de Red"},{"location":"osyred/#infraestructura-en-aws","text":"Nuestra infraestructura est\u00e1 alojada en la nube de AWS dentro de una VPC, la cual est\u00e1 dividida en dos subredes: Subred P\u00fablica (10.0.0.0/24) : Contiene los servidores accesibles desde internet. Subred Privada (10.0.1.0/24) : Contiene servidores internos sin acceso directo a internet. AWS proporciona los servicios necesarios para la gesti\u00f3n del tr\u00e1fico entre subredes y hacia el exterior, por lo que no es necesario contar con una m\u00e1quina dedicada como router. En su lugar, se utilizan las herramientas nativas de AWS, como las tablas de rutas y las gateways de internet y NAT. Adem\u00e1s, AWS proporciona un acceso seguro a las m\u00e1quinas mediante SSH, RDP y SFTP, utilizando claves para garantizar la autenticaci\u00f3n y la integridad de las conexiones remotas.","title":"Infraestructura en AWS"},{"location":"osyred/#servidores-y-funcionalidad","text":"","title":"Servidores y Funcionalidad"},{"location":"osyred/#subred-publica","text":"Servidor DNS Primario (Fedora) : Encargado exclusivamente del servicio de resoluci\u00f3n de nombres mediante BIND. IP privada: 10.0.0.138 Servidor Web, Correo y DNS Secundario (Ubuntu 24.04) : Funciona como respaldo del servidor DNS primario. Aloja un servidor web Nginx con la web principal y la web del departamento de ventas. Implementa un servidor de correo basado en Postfix y Dovecot. Ejecuta MkDocs para la gesti\u00f3n y publicaci\u00f3n de documentaci\u00f3n en GitHub Pages. IP privada: 10.0.0.89 Cliente Windows Server 2025 : Se utiliza para visualizar y probar todas las aplicaciones que requieren una interfaz gr\u00e1fica. Est\u00e1 alojado en la subred p\u00fablica.","title":"Subred P\u00fablica"},{"location":"osyred/#subred-privada","text":"Servidor de Aplicaciones y Formaci\u00f3n (Fedora) : Ejecuta un servidor web Apache con VirtualHosts para los departamentos de inform\u00e1tica y formaci\u00f3n. En el departamento de inform\u00e1tica aloja un sitio WordPress. En el departamento de formaci\u00f3n gestiona Moodle como plataforma educativa. Implementa un servicio de webmail Roundcube, el cual se conecta con el servidor de correo alojado en la subred p\u00fablica. IP privada: 10.0.1.229","title":"Subred Privada"},{"location":"osyred/#configuracion-de-red","text":"Para garantizar la comunicaci\u00f3n entre las m\u00e1quinas, se han establecido las siguientes configuraciones: Internet Gateway y NAT Gateway : Permiten el acceso a internet de las instancias en la subred p\u00fablica y facilitan la conectividad de la subred privada a internet sin exponerla directamente. Tablas de Rutas : Se han definido rutas para la comunicaci\u00f3n entre las subredes y la conexi\u00f3n externa. Configuraci\u00f3n de DNS : Se ha implementado un sistema de resoluci\u00f3n de nombres interno para gestionar los dominios de la infraestructura. Esta configuraci\u00f3n servir\u00e1 como base para la correcta implementaci\u00f3n de los servicios de red en fases posteriores del proyecto.","title":"Configuraci\u00f3n de Red"},{"location":"osyred/#creacion-de-la-vpc-y-subredes-en-aws","text":"En esta documentaci\u00f3n se detallar\u00e1 paso a paso el proceso de creaci\u00f3n de la VPC y la configuraci\u00f3n de las subredes en AWS.","title":"Creaci\u00f3n de la VPC y Subredes en AWS"},{"location":"osyred/#1-creacion-de-la-vpc","text":"Accedemos a la consola de AWS y nos dirigimos al servicio VPC . Hacemos clic en Crear VPC y completamos los siguientes datos: Guardamos la configuraci\u00f3n y verificamos que la VPC ha sido creada correctamente.","title":"1. Creaci\u00f3n de la VPC"},{"location":"osyred/#2-creacion-de-subredes","text":"","title":"2. Creaci\u00f3n de Subredes"},{"location":"osyred/#subred-publica_1","text":"Dentro del servicio de VPC, vamos a Subredes y hacemos clic en Crear subred . Completamos los siguientes campos: Guardamos la configuraci\u00f3n.","title":"Subred P\u00fablica"},{"location":"osyred/#subred-privada_1","text":"Repetimos el proceso anterior, pero con los siguientes datos: Guardamos la configuraci\u00f3n y verificamos su creaci\u00f3n.","title":"Subred Privada"},{"location":"osyred/#3-configuracion-del-internet-gateway","text":"Vamos a Gateways de Internet dentro de VPC y hacemos clic en Crear Gateway de Internet . Le damos el nombre SudoHeroes-IGW y confirmamos la creaci\u00f3n. Asociamos el Internet Gateway a la VPC vpc-sudoheroes .","title":"3. Configuraci\u00f3n del Internet Gateway"},{"location":"osyred/#4-configuracion-de-las-tablas-de-rutas","text":"","title":"4. Configuraci\u00f3n de las Tablas de Rutas"},{"location":"osyred/#tabla-de-rutas-de-la-subred-publica","text":"En Tablas de Rutas , seleccionamos la tabla de rutas creada autom\u00e1ticamente para la VPC. Agregamos una nueva regla: Guardamos la configuraci\u00f3n.","title":"Tabla de rutas de la subred p\u00fablica"},{"location":"osyred/#tabla-de-rutas-de-la-subred-privada","text":"Creamos una nueva NAT Gateway en la subred p\u00fablica con una IP el\u00e1stica asignada. Creamos una nueva tabla de rutas y la asociamos a la subred privada. Agregamos una nueva regla: Guardamos la configuraci\u00f3n. Esta documentaci\u00f3n describe detalladamente el proceso de creaci\u00f3n y configuraci\u00f3n de la VPC y sus subredes en AWS.","title":"Tabla de rutas de la subred privada"},{"location":"osyred/#creacion-de-instancias-en-las-subredes-de-aws","text":"En esta documentaci\u00f3n se describe paso a paso el proceso de creaci\u00f3n y configuraci\u00f3n de las instancias dentro de las subredes p\u00fablica y privada de la VPC en AWS.","title":"Creaci\u00f3n de Instancias en las Subredes de AWS"},{"location":"osyred/#1-creacion-de-la-instancia-fedora-servidor-dns-primario-en-la-subred-publica","text":"Accedemos a la consola de AWS y vamos al servicio EC2 . Hacemos clic en Lanzar Instancia y configuramos lo siguiente: Generamos o usamos un par de claves para acceder a la instancia. Le asignamos una IP el\u00e1stica. Comprobamos su conectividad.","title":"1. Creaci\u00f3n de la Instancia Fedora (Servidor DNS Primario) en la Subred P\u00fablica"},{"location":"osyred/#2-creacion-de-la-instancia-ubuntu-servidor-web-y-correo-en-la-subred-publica","text":"Repetimos el proceso anterior con las siguientes configuraciones: Le asignamos una direcci\u00f3n IP el\u00e1stica. Comprobamos su conectividad.","title":"2. Creaci\u00f3n de la Instancia Ubuntu (Servidor Web y Correo) en la Subred P\u00fablica"},{"location":"osyred/#3-creacion-de-la-instancia-fedora-servidor-de-aplicaciones-y-formacion-en-la-subred-privada","text":"Lanzamos una nueva instancia con las siguientes configuraciones: Para permitir la conexi\u00f3n SSH desde la subred p\u00fablica, configuramos una conexi\u00f3n a trav\u00e9s de una m\u00e1quina puente. Ahora nos podremos conectar a Fedora (interna) mediante SSH con Ubuntu y Fedora (externa), as\u00ed como podemos acceder a sus servicios gr\u00e1ficos con la m\u00e1quina Windows que vamos a crear a continuaci\u00f3n.","title":"3. Creaci\u00f3n de la Instancia Fedora (Servidor de Aplicaciones y Formaci\u00f3n) en la Subred Privada"},{"location":"osyred/#4-creacion-de-la-instancia-windows-server-2025-cliente-en-la-subred-publica","text":"Creamos una nueva instancia con la siguiente configuraci\u00f3n: Nombre: Cliente-Windows Sistema Operativo: Windows Server 2025 Subred: Subred-Publica Habilitar IP p\u00fablica: S\u00ed Grupo de seguridad: Permitimos RDP (3389). Configuramos credenciales de acceso y verificamos conectividad.","title":"4. Creaci\u00f3n de la Instancia Windows Server 2025 (Cliente) en la Subred P\u00fablica"},{"location":"osyred/#5-grupos-de-seguridad","text":"Configuraremos los grupos de seguridad acorde con los servicios de los que precisaremos durante el reto. Subred P\u00fablica Subred Privada Esta configuraci\u00f3n garantiza que cada instancia est\u00e9 correctamente desplegada y conectada dentro de la infraestructura de AWS.","title":"5. Grupos de seguridad"}]}